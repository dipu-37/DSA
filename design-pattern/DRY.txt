OOP-এ DRY Principle মানে হলো "Don’t Repeat Yourself"।
এটা একটি সফটওয়্যার ডেভেলপমেন্ট নীতি, যার মূল কথা হলো—
একই ধরনের কোড, লজিক বা ডেটা বারবার না লিখে পুনঃব্যবহারযোগ্য (reusable) আকারে রাখা।

OOP-এ DRY এর মূল উদ্দেশ্য
কোড পুনঃব্যবহারযোগ্য করা – একবার লিখে বহু জায়গায় ব্যবহার।

মেইনটেইন সহজ করা – পরিবর্তন শুধু এক জায়গায় করলেই পুরো সিস্টেমে আপডেট হয়।

বাগ কমানো – ডুপ্লিকেট কোড কম থাকায় ভুলের সম্ভাবনা কমে।

রিডেবিলিটি বাড়ানো – কোড ছোট, পরিষ্কার ও বোধগম্য হয়।

কিভাবে OOP-এ DRY বাস্তবায়ন করা হয়
Classes এবং Objects – সাধারণ ফাংশনালিটি ক্লাসে রেখে ইনস্ট্যান্স তৈরি করে ব্যবহার করা।

Inheritance – সাধারণ বৈশিষ্ট্য parent class-এ রেখে child classes-এ reuse করা।

Polymorphism – একই interface বা method signature ব্যবহার করে ভিন্ন ভিন্ন কাজ করানো।

Methods / Functions – বারবার একই কোড লেখার বদলে মেথড বানিয়ে কল করা।

Modules / Packages – আলাদা ফাইলে reusable কোড রেখে import করা।